{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\desktop\\\\wannee.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"../../utils/Spotify\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchedTracks, setSearchedTracks] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    const spotifyTokenFromUrlFragment = window.location.hash.split(\"&\")[0].substring(14);\n    setSpotifyToken(spotifyTokenFromUrlFragment);\n  }, []);\n\n  async function searchSpotify(searchTerms) {\n    const results = await Spotify.search(searchTerms, spotifyToken);\n    setSearchedTracks(results);\n  }\n\n  async function createSpotifyPlaylist(name, trackIds) {\n    await Spotify.createPlaylist(name, trackIds, spotifyToken);\n    setPlaylistTracks([]);\n  }\n\n  function addTrackToPlaylist(track) {\n    setPlaylistTracks(oldPlaylistTracks => {\n      if (oldPlaylistTracks.includes(track)) {\n        return oldPlaylistTracks;\n      } else {\n        return [...oldPlaylistTracks, track];\n      }\n    });\n  }\n\n  function removeTrackFromPlaylist(track) {\n    setPlaylistTracks(oldPlaylistTracks => oldPlaylistTracks.filter(t => track !== t));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \" mmm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), \"ing\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchSpotify: searchSpotify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          tracks: searchedTracks,\n          addTrackToPlaylist: addTrackToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Playlist, {\n          tracks: playlistTracks,\n          removeTrackFromPlaylist: removeTrackFromPlaylist,\n          createSpotifyPlaylist: createSpotifyPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yT6WbXQ4o0xsRr7NoGsYV2zIo44=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/desktop/wannee.github.io/jsd-jamming-assessment/src/components/App/App.js"],"names":["React","useState","useEffect","Spotify","SearchBar","SearchResults","Playlist","App","searchedTracks","setSearchedTracks","playlistTracks","setPlaylistTracks","spotifyToken","setSpotifyToken","spotifyTokenFromUrlFragment","window","location","hash","split","substring","searchSpotify","searchTerms","results","search","createSpotifyPlaylist","name","trackIds","createPlaylist","addTrackToPlaylist","track","oldPlaylistTracks","includes","removeTrackFromPlaylist","filter","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../utils/Spotify\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction App() {\r\n  const [searchedTracks, setSearchedTracks] = useState([]);\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n  const [spotifyToken, setSpotifyToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const spotifyTokenFromUrlFragment = window.location.hash\r\n      .split(\"&\")[0]\r\n      .substring(14);\r\n    setSpotifyToken(spotifyTokenFromUrlFragment);\r\n  }, []);\r\n\r\n  async function searchSpotify(searchTerms) {\r\n    const results = await Spotify.search(searchTerms, spotifyToken);\r\n    setSearchedTracks(results);\r\n  }\r\n\r\n  async function createSpotifyPlaylist(name, trackIds) {\r\n    await Spotify.createPlaylist(name, trackIds, spotifyToken);\r\n    setPlaylistTracks([]);\r\n  }\r\n\r\n  function addTrackToPlaylist(track) {\r\n    setPlaylistTracks((oldPlaylistTracks) => {\r\n      if (oldPlaylistTracks.includes(track)) {\r\n        return oldPlaylistTracks;\r\n      } else {\r\n        return [...oldPlaylistTracks, track];\r\n      }\r\n    });\r\n  }\r\n\r\n  function removeTrackFromPlaylist(track) {\r\n    setPlaylistTracks((oldPlaylistTracks) =>\r\n      oldPlaylistTracks.filter((t) => track !== t)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Ja <span className=\"highlight\"> mmm </span>ing{\" \"}\r\n      </h1>{\" \"}\r\n      <div className=\"App\">\r\n        <SearchBar searchSpotify={searchSpotify} />{\" \"}\r\n        <div className=\"App-playlist\">\r\n          <SearchResults\r\n            tracks={searchedTracks}\r\n            addTrackToPlaylist={addTrackToPlaylist}\r\n          />{\" \"}\r\n          <Playlist\r\n            tracks={playlistTracks}\r\n            removeTrackFromPlaylist={removeTrackFromPlaylist}\r\n            createSpotifyPlaylist={createSpotifyPlaylist}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}