{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\wannee19.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\Playlist\\\\Playlist.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from \"react\";\nimport \"./Playlist.css\";\nimport Track from \"../Track/Track\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist(props) {\n  _s();\n\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\n\n  async function handleSave() {\n    const trackIds = props.tracks.map(t => t.id);\n    props.createSpotifyPlaylist(playlistName, trackIds);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setPlaylistName(e.target.value),\n      placeholder: playlistName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TrackList\",\n      children: [\" \", props.tracks.map(track => {\n        return /*#__PURE__*/_jsxDEV(Track, {\n          track: track,\n          trackActionCharacter: \"-\",\n          handleTrackAction: props.removeTrackFromPlaylist\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      }), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"Playlist-save\",\n      onClick: handleSave,\n      children: [\" \", \"SAVE TO SPOTIFY\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playlist, \"7tJ9OClXrmkoTWQLRl2hHsOh2qw=\");\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/src/components/Playlist/Playlist.js"],"names":["React","useState","Track","Playlist","props","playlistName","setPlaylistName","handleSave","trackIds","tracks","map","t","id","createSpotifyPlaylist","e","target","value","track","removeTrackFromPlaylist"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,cAAD,CAAhD;;AAEA,iBAAeM,UAAf,GAA4B;AAC1B,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAkBC,CAAD,IAAOA,CAAC,CAACC,EAA1B,CAAjB;AACAR,IAAAA,KAAK,CAACS,qBAAN,CAA4BR,YAA5B,EAA0CG,QAA1C;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AACE,MAAA,QAAQ,EAAGM,CAAD,IAAOR,eAAe,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CADlC;AAEE,MAAA,WAAW,EAAEX;AAFf;AAAA;AAAA;AAAA;AAAA,YADF,EAIK,GAJL,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACG,GADH,EAEGD,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAkBO,KAAD,IAAW;AAC3B,4BACE,QAAC,KAAD;AAEE,UAAA,KAAK,EAAEA,KAFT;AAGE,UAAA,oBAAoB,EAAC,GAHvB;AAIE,UAAA,iBAAiB,EAAEb,KAAK,CAACc;AAJ3B,WACOD,KAAK,CAACL,EADb;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATA,CAFH,EAWM,GAXN;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAiBS,GAjBT,eAkBE;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,OAAO,EAAEL,UAAtC;AAAA,iBACG,GADH,qBAEkB,GAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAqBO,GArBP;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAhCQJ,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from \"react\";\r\nimport \"./Playlist.css\";\r\nimport Track from \"../Track/Track\";\r\n\r\nfunction Playlist(props) {\r\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\r\n\r\n  async function handleSave() {\r\n    const trackIds = props.tracks.map((t) => t.id);\r\n    props.createSpotifyPlaylist(playlistName, trackIds);\r\n  }\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <input\r\n        onChange={(e) => setPlaylistName(e.target.value)}\r\n        placeholder={playlistName}\r\n      />{\" \"}\r\n      <div className=\"TrackList\">\r\n        {\" \"}\r\n        {props.tracks.map((track) => {\r\n          return (\r\n            <Track\r\n              key={track.id}\r\n              track={track}\r\n              trackActionCharacter=\"-\"\r\n              handleTrackAction={props.removeTrackFromPlaylist}\r\n            />\r\n          );\r\n        })}{\" \"}\r\n      </div>{\" \"}\r\n      <a className=\"Playlist-save\" onClick={handleSave}>\r\n        {\" \"}\r\n        SAVE TO SPOTIFY{\" \"}\r\n      </a>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n"]},"metadata":{},"sourceType":"module"}