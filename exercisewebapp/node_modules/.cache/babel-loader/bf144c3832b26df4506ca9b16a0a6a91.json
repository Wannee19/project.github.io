{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\wannee19.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"../../utils/Spotify\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../searchResults/searchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchedTracks, setSearchedTracks] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    const spotifyTokenFromUrlFragment = window.location.hash.split(\"&\")[0].substring(14);\n    setSpotifyToken(spotifyTokenFromUrlFragment);\n  }, []);\n\n  const addTrack = track => {\n    let tracks = [...playlistTracks]; // check if it had => return function\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    SearchResults;\n    let results = [...SearchResults];\n    results = results.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n    setSearchResults(results);\n  };\n\n  const removeTrack = track => {\n    let tracks = [...playlistTracks]; // filter with not same id condition\n\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n  };\n\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n\n  const savePlaylist = () => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      // Reset playlistName and playlistTracks after save playlist\n      setPlaylistName(\"\");\n      setPlaylistTracks([]);\n    });\n  };\n\n  const search = term => {\n    Spotify.search(term).then(searchResults => {\n      setSearchResults(searchResults);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \" mmm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }, this), \"ing\", \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(\"searchResults\", {\n          searchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), \" \", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 14\n  }, this);\n}\n\n_s(App, \"yT6WbXQ4o0xsRr7NoGsYV2zIo44=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/src/components/App/App.js"],"names":["React","useState","useEffect","Spotify","SearchBar","SearchResults","Playlist","App","searchedTracks","setSearchedTracks","playlistTracks","setPlaylistTracks","spotifyToken","setSpotifyToken","spotifyTokenFromUrlFragment","window","location","hash","split","substring","addTrack","track","tracks","find","savedTrack","id","push","results","filter","currentTrack","setSearchResults","removeTrack","updatePlaylistName","name","setPlaylistName","savePlaylist","trackUris","map","uri","playlistName","then","search","term","searchResults"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../utils/Spotify\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../searchResults/searchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction App() {\r\n    const [searchedTracks, setSearchedTracks] = useState([]);\r\n    const [playlistTracks, setPlaylistTracks] = useState([]);\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const spotifyTokenFromUrlFragment = window.location.hash\r\n            .split(\"&\")[0]\r\n            .substring(14);\r\n        setSpotifyToken(spotifyTokenFromUrlFragment);\r\n    }, []);\r\n\r\n    const addTrack = (track) => {\r\n        let tracks = [...playlistTracks];\r\n        // check if it had => return function\r\n        if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\r\n            return;\r\n        }\r\n        tracks.push(track);\r\n        SearchResults;\r\n        let results = [...SearchResults];\r\n        results = results.filter((currentTrack) => currentTrack.id !== track.id);\r\n        setPlaylistTracks(tracks);\r\n        setSearchResults(results);\r\n    };\r\n\r\n    const removeTrack = (track) => {\r\n        let tracks = [...playlistTracks];\r\n        // filter with not same id condition\r\n        tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\r\n        setPlaylistTracks(tracks);\r\n    };\r\n\r\n    const updatePlaylistName = (name) => {\r\n        setPlaylistName(name);\r\n    };\r\n\r\n    const savePlaylist = () => {\r\n        const trackUris = playlistTracks.map((track) => track.uri);\r\n        Spotify.savePlaylist(playlistName, trackUris).then(() => {\r\n            // Reset playlistName and playlistTracks after save playlist\r\n            setPlaylistName(\"\");\r\n            setPlaylistTracks([]);\r\n        });\r\n    };\r\n\r\n    const search = (term) => {\r\n        Spotify.search(term).then((searchResults) => {\r\n            setSearchResults(searchResults);\r\n        });\r\n    };\r\n\r\n    return ( <\r\n        div >\r\n        <\r\n        h1 >\r\n        Ja < span className = \"highlight\" > mmm < /span>ing{\" \"} <\r\n        /h1>{\" \"} <\r\n        div className = \"App\" >\r\n        <\r\n        SearchBar onSearch = { search }\r\n        />{\" \"} <\r\n        div className = \"App-playlist\" >\r\n        <\r\n        searchResults searchResults = { searchResults }\r\n        onAdd = { addTrack }\r\n        />{\" \"} <\r\n        Playlist playlistName = { playlistName }\r\n        playlistTracks = { playlistTracks }\r\n        onRemove = { removeTrack }\r\n        onNameChange = { updatePlaylistName }\r\n        onSave = { savePlaylist }\r\n        />{\" \"} <\r\n        /div>{\" \"} <\r\n        /div>{\" \"} <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}