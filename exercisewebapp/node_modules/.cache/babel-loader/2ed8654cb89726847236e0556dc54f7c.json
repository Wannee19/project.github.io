{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\wannee19.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"../../utils/Spotify\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/searchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [SearchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  useEffect(() => {\n    // Use to get access token before \"GET\" or \"POST\" : Parameter Header must be Authorization: Bearer <Access Token>\n    Spotify.getAccessToken();\n  }, []);\n\n  const addTrack = track => {\n    let tracks = [...playlistTracks]; // check if it had => return function\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    let results = [...SearchResults];\n    results = results.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n    setSearchResults(results);\n  };\n\n  const removeTrack = track => {\n    let tracks = [...playlistTracks]; // filter with not same id condition\n\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n  };\n\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n\n  const savePlaylist = () => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      // Reset playlistName and playlistTracks after save playlist\n      setPlaylistName(\"\");\n      setPlaylistTracks([]);\n    });\n  };\n\n  const search = term => {\n    Spotify.search(term).then(SearchResults => {\n      setSearchResults(searchResults);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          searchResults: SearchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xLWjAbfXTR9K4g2zOD8gOT9WOLk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/src/components/App/App.js"],"names":["React","useState","useEffect","Spotify","SearchBar","SearchResults","Playlist","App","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","getAccessToken","addTrack","track","tracks","find","savedTrack","id","push","results","filter","currentTrack","removeTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","then","search","term","searchResults"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../utils/Spotify\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/searchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction App() {\r\n  const [SearchResults, setSearchResults] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Use to get access token before \"GET\" or \"POST\" : Parameter Header must be Authorization: Bearer <Access Token>\r\n    Spotify.getAccessToken();\r\n  }, []);\r\n\r\n  const addTrack = (track) => {\r\n    let tracks = [...playlistTracks];\r\n    // check if it had => return function\r\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\r\n      return;\r\n    }\r\n    tracks.push(track);\r\n    let results = [...SearchResults];\r\n    results = results.filter((currentTrack) => currentTrack.id !== track.id);\r\n    setPlaylistTracks(tracks);\r\n    setSearchResults(results);\r\n  };\r\n\r\n  const removeTrack = (track) => {\r\n    let tracks = [...playlistTracks];\r\n    // filter with not same id condition\r\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\r\n    setPlaylistTracks(tracks);\r\n  };\r\n\r\n  const updatePlaylistName = (name) => {\r\n    setPlaylistName(name);\r\n  };\r\n\r\n  const savePlaylist = () => {\r\n    const trackUris = playlistTracks.map((track) => track.uri);\r\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\r\n      // Reset playlistName and playlistTracks after save playlist\r\n      setPlaylistName(\"\");\r\n      setPlaylistTracks([]);\r\n    });\r\n  };\r\n\r\n  const search = (term) => {\r\n    Spotify.search(term).then((SearchResults) => {\r\n      setSearchResults(searchResults);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Ja<span className=\"highlight\">mmm</span>ing\r\n      </h1>\r\n      <div className=\"App\">\r\n        <SearchBar onSearch={search} />\r\n        <div className=\"App-playlist\">\r\n          <SearchResults searchResults={SearchResults} onAdd={addTrack} />\r\n          <Playlist\r\n            playlistName={playlistName}\r\n            playlistTracks={playlistTracks}\r\n            onRemove={removeTrack}\r\n            onNameChange={updatePlaylistName}\r\n            onSave={savePlaylist}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}