{"ast":null,"code":"import _toConsumableArray from\"C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import\"./App.css\";import Spotify from\"../../utils/Spotify\";import SearchBar from\"../SearchBar/SearchBar\";import SearchResults from\"../SearchResults/SearchResults\";import Playlist from\"../Playlist/Playlist\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),searchResults=_useState2[0],setSearchResults=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),playlistName=_useState4[0],setPlaylistName=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),playlistTracks=_useState6[0],setPlaylistTracks=_useState6[1];useEffect(function(){// Use to get access token before \"GET\" or \"POST\" : Parameter Header must be Authorization: Bearer <Access Token>\nSpotify.getAccessToken();},[]);var addTrack=function addTrack(track){var tracks=_toConsumableArray(playlistTracks);// check if it had => return function\nif(tracks.find(function(savedTrack){return savedTrack.id===track.id;})){return;}tracks.push(track);var results=_toConsumableArray(searchResults);results=results.filter(function(currentTrack){return currentTrack.id!==track.id;});setPlaylistTracks(tracks);setSearchResults(results);};var removeTrack=function removeTrack(track){var tracks=_toConsumableArray(playlistTracks);// filter with not same id condition\ntracks=tracks.filter(function(currentTrack){return currentTrack.id!==track.id;});setPlaylistTracks(tracks);};var updatePlaylistName=function updatePlaylistName(name){setPlaylistName(name);};var savePlaylist=function savePlaylist(){var trackUris=playlistTracks.map(function(track){return track.uri;});Spotify.savePlaylist(playlistName,trackUris).then(function(){// Reset playlistName and playlistTracks after save playlist\nsetPlaylistName(\"\");setPlaylistTracks([]);});};var search=function search(term){Spotify.search(term).then(function(searchResults){setSearchResults(searchResults);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ja\",/*#__PURE__*/_jsx(\"span\",{className:\"highlight\",children:\"mmm\"}),\"ing\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:search}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-playlist\",children:[/*#__PURE__*/_jsx(SearchResults,{searchResults:searchResults,onAdd:addTrack}),/*#__PURE__*/_jsx(Playlist,{playlistName:playlistName,playlistTracks:playlistTracks,onRemove:removeTrack,onNameChange:updatePlaylistName,onSave:savePlaylist})]})]})]});}export default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/src/components/App/App.js"],"names":["React","useState","useEffect","Spotify","SearchBar","SearchResults","Playlist","App","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","getAccessToken","addTrack","track","tracks","find","savedTrack","id","push","results","filter","currentTrack","removeTrack","updatePlaylistName","name","savePlaylist","trackUris","map","uri","then","search","term"],"mappings":"kTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA0CN,QAAQ,CAAC,EAAD,CAAlD,wCAAOO,aAAP,eAAsBC,gBAAtB,eACA,eAAwCR,QAAQ,CAAC,EAAD,CAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eACA,eAA4CV,QAAQ,CAAC,EAAD,CAApD,yCAAOW,cAAP,eAAuBC,iBAAvB,eAEAX,SAAS,CAAC,UAAM,CACd;AACAC,OAAO,CAACW,cAAR,GACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAIC,CAAAA,MAAM,oBAAOL,cAAP,CAAV,CACA;AACA,GAAIK,MAAM,CAACC,IAAP,CAAY,SAACC,UAAD,QAAgBA,CAAAA,UAAU,CAACC,EAAX,GAAkBJ,KAAK,CAACI,EAAxC,EAAZ,CAAJ,CAA6D,CAC3D,OACD,CACDH,MAAM,CAACI,IAAP,CAAYL,KAAZ,EACA,GAAIM,CAAAA,OAAO,oBAAOd,aAAP,CAAX,CACAc,OAAO,CAAGA,OAAO,CAACC,MAAR,CAAe,SAACC,YAAD,QAAkBA,CAAAA,YAAY,CAACJ,EAAb,GAAoBJ,KAAK,CAACI,EAA5C,EAAf,CAAV,CACAP,iBAAiB,CAACI,MAAD,CAAjB,CACAR,gBAAgB,CAACa,OAAD,CAAhB,CACD,CAXD,CAaA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACT,KAAD,CAAW,CAC7B,GAAIC,CAAAA,MAAM,oBAAOL,cAAP,CAAV,CACA;AACAK,MAAM,CAAGA,MAAM,CAACM,MAAP,CAAc,SAACC,YAAD,QAAkBA,CAAAA,YAAY,CAACJ,EAAb,GAAoBJ,KAAK,CAACI,EAA5C,EAAd,CAAT,CACAP,iBAAiB,CAACI,MAAD,CAAjB,CACD,CALD,CAOA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAU,CACnChB,eAAe,CAACgB,IAAD,CAAf,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,SAAS,CAAGjB,cAAc,CAACkB,GAAf,CAAmB,SAACd,KAAD,QAAWA,CAAAA,KAAK,CAACe,GAAjB,EAAnB,CAAlB,CACA5B,OAAO,CAACyB,YAAR,CAAqBlB,YAArB,CAAmCmB,SAAnC,EAA8CG,IAA9C,CAAmD,UAAM,CACvD;AACArB,eAAe,CAAC,EAAD,CAAf,CACAE,iBAAiB,CAAC,EAAD,CAAjB,CACD,CAJD,EAKD,CAPD,CASA,GAAMoB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,IAAD,CAAU,CACvB/B,OAAO,CAAC8B,MAAR,CAAeC,IAAf,EAAqBF,IAArB,CAA0B,SAACxB,aAAD,CAAmB,CAC3CC,gBAAgB,CAACD,aAAD,CAAhB,CACD,CAFD,EAGD,CAJD,CAMA,mBACE,oCACE,wCACI,aAAM,SAAS,CAAC,WAAhB,iBADJ,SADF,cAIE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,SAAD,EAAW,QAAQ,CAAEyB,MAArB,EADF,cAEE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,aAAD,EAAe,aAAa,CAAEzB,aAA9B,CAA6C,KAAK,CAAEO,QAApD,EADF,cAEE,KAAC,QAAD,EACE,YAAY,CAAEL,YADhB,CAEE,cAAc,CAAEE,cAFlB,CAGE,QAAQ,CAAEa,WAHZ,CAIE,YAAY,CAAEC,kBAJhB,CAKE,MAAM,CAAEE,YALV,EAFF,GAFF,GAJF,GADF,CAoBD,CAED,cAAerB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../utils/Spotify\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction App() {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Use to get access token before \"GET\" or \"POST\" : Parameter Header must be Authorization: Bearer <Access Token>\r\n    Spotify.getAccessToken();\r\n  }, []);\r\n\r\n  const addTrack = (track) => {\r\n    let tracks = [...playlistTracks];\r\n    // check if it had => return function\r\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\r\n      return;\r\n    }\r\n    tracks.push(track);\r\n    let results = [...searchResults];\r\n    results = results.filter((currentTrack) => currentTrack.id !== track.id);\r\n    setPlaylistTracks(tracks);\r\n    setSearchResults(results);\r\n  };\r\n\r\n  const removeTrack = (track) => {\r\n    let tracks = [...playlistTracks];\r\n    // filter with not same id condition\r\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\r\n    setPlaylistTracks(tracks);\r\n  };\r\n\r\n  const updatePlaylistName = (name) => {\r\n    setPlaylistName(name);\r\n  };\r\n\r\n  const savePlaylist = () => {\r\n    const trackUris = playlistTracks.map((track) => track.uri);\r\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\r\n      // Reset playlistName and playlistTracks after save playlist\r\n      setPlaylistName(\"\");\r\n      setPlaylistTracks([]);\r\n    });\r\n  };\r\n\r\n  const search = (term) => {\r\n    Spotify.search(term).then((searchResults) => {\r\n      setSearchResults(searchResults);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Ja<span className=\"highlight\">mmm</span>ing\r\n      </h1>\r\n      <div className=\"App\">\r\n        <SearchBar onSearch={search} />\r\n        <div className=\"App-playlist\">\r\n          <SearchResults searchResults={searchResults} onAdd={addTrack} />\r\n          <Playlist\r\n            playlistName={playlistName}\r\n            playlistTracks={playlistTracks}\r\n            onRemove={removeTrack}\r\n            onNameChange={updatePlaylistName}\r\n            onSave={savePlaylist}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}