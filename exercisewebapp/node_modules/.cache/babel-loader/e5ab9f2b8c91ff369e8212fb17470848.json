{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\wannee19.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"../../utils/Spotify\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/searchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchedTracks, setSearchedTracks] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    const spotifyTokenFromUrlFragment = window.location.hash.split(\"&\")[0].substring(14);\n    setSpotifyToken(spotifyTokenFromUrlFragment);\n  }, []);\n\n  const addTrack = track => {\n    let tracks = [...playlistTracks]; // check if it had => return function\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    SearchResults;\n    let results = [...SearchResults];\n    results = results.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n    setSearchResults(results);\n  };\n\n  const removeTrack = track => {\n    let tracks = [...playlistTracks]; // filter with not same id condition\n\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    setPlaylistTracks(tracks);\n  };\n\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n\n  const savePlaylist = () => {\n    const trackUris = playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\n      // Reset playlistName and playlistTracks after save playlist\n      setPlaylistName(\"\");\n      setPlaylistTracks([]);\n    });\n  };\n\n  const search = term => {\n    Spotify.search(term).then(SearchResults => {\n      setSearchResults(searchResults);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \" mmm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }, this), \"ing\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          searchResults: SearchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yT6WbXQ4o0xsRr7NoGsYV2zIo44=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/wannee19.github.io/jsd-jamming-assessment/src/components/App/App.js"],"names":["React","useState","useEffect","Spotify","SearchBar","SearchResults","Playlist","App","searchedTracks","setSearchedTracks","playlistTracks","setPlaylistTracks","spotifyToken","setSpotifyToken","spotifyTokenFromUrlFragment","window","location","hash","split","substring","addTrack","track","tracks","find","savedTrack","id","push","results","filter","currentTrack","setSearchResults","removeTrack","updatePlaylistName","name","setPlaylistName","savePlaylist","trackUris","map","uri","playlistName","then","search","term","searchResults"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../utils/Spotify\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/searchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction App() {\r\n  const [searchedTracks, setSearchedTracks] = useState([]);\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n  const [spotifyToken, setSpotifyToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const spotifyTokenFromUrlFragment = window.location.hash\r\n      .split(\"&\")[0]\r\n      .substring(14);\r\n    setSpotifyToken(spotifyTokenFromUrlFragment);\r\n  }, []);\r\n\r\n  const addTrack = (track) => {\r\n    let tracks = [...playlistTracks];\r\n    // check if it had => return function\r\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\r\n      return;\r\n    }\r\n    tracks.push(track);\r\n    SearchResults;\r\n    let results = [...SearchResults];\r\n    results = results.filter((currentTrack) => currentTrack.id !== track.id);\r\n    setPlaylistTracks(tracks);\r\n    setSearchResults(results);\r\n  };\r\n\r\n  const removeTrack = (track) => {\r\n    let tracks = [...playlistTracks];\r\n    // filter with not same id condition\r\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\r\n    setPlaylistTracks(tracks);\r\n  };\r\n\r\n  const updatePlaylistName = (name) => {\r\n    setPlaylistName(name);\r\n  };\r\n\r\n  const savePlaylist = () => {\r\n    const trackUris = playlistTracks.map((track) => track.uri);\r\n    Spotify.savePlaylist(playlistName, trackUris).then(() => {\r\n      // Reset playlistName and playlistTracks after save playlist\r\n      setPlaylistName(\"\");\r\n      setPlaylistTracks([]);\r\n    });\r\n  };\r\n\r\n  const search = (term) => {\r\n    Spotify.search(term).then((SearchResults) => {\r\n      setSearchResults(searchResults);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Ja <span className=\"highlight\"> mmm </span>ing{\" \"}\r\n      </h1>{\" \"}\r\n      <div className=\"App\">\r\n        <SearchBar onSearch={search} />{\" \"}\r\n        <div className=\"App-playlist\">\r\n          <SearchResults searchResults={SearchResults} onAdd={addTrack} />{\" \"}\r\n          <Playlist\r\n            playlistName={playlistName}\r\n            playlistTracks={playlistTracks}\r\n            onRemove={removeTrack}\r\n            onNameChange={updatePlaylistName}\r\n            onSave={savePlaylist}\r\n          />{\" \"}\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}