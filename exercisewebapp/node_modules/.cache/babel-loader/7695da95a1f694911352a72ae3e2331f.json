{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\desktop\\\\wannee.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchBar(props) {\n  _s();\n\n  const initialSearchTerm = () => String(window.localStorage.getItem('searchTerm') || '');\n\n  const [searchTerm, setSearchTerm] = useState(initialSearchTerm);\n  useEffect(() => {\n    window.localStorage.setItem('searchTerm', searchTerm);\n  }, [searchTerm]);\n\n  async function handleSearch() {\n    try {\n      await props.searchSpotify(searchTerm);\n    } catch (error) {\n      console.warn(error);\n      const clientId = '1dceb8831c90409b9872b61d0123e24aaf4094bc06e540edbc82403be27a055c';\n      const currentUrl = window.location.href;\n      window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${currentUrl}`;\n    }\n  }\n\n  async function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      await handleSearch();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SearchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setSearchTerm(e.target.value),\n      onKeyPress: handleKeyPress,\n      placeholder: \"Enter A Song Title\",\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: handleSearch,\n      children: \" SEARCH \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 14\n  }, this);\n}\n\n_s(SearchBar, \"PYCOc1tijiMnVlfvpQoq7M0XfXo=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/user/desktop/wannee.github.io/jsd-jamming-assessment/src/components/SearchBar/SearchBar.js"],"names":["React","useState","useEffect","SearchBar","props","initialSearchTerm","String","window","localStorage","getItem","searchTerm","setSearchTerm","setItem","handleSearch","searchSpotify","error","console","warn","clientId","currentUrl","location","href","handleKeyPress","e","key","target","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,iBAAP;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,iBAAiB,GAAG,MACtBC,MAAM,CAACC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,KAA6C,EAA9C,CADV;;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACI,iBAAD,CAA5C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,YAA5B,EAA0CF,UAA1C;AACH,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,iBAAeG,YAAf,GAA8B;AAC1B,QAAI;AACA,YAAMT,KAAK,CAACU,aAAN,CAAoBJ,UAApB,CAAN;AACH,KAFD,CAEE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,YAAMG,QAAQ,GAAG,kEAAjB;AACA,YAAMC,UAAU,GAAGZ,MAAM,CAACa,QAAP,CAAgBC,IAAnC;AACAd,MAAAA,MAAM,CAACa,QAAP,CAAgBC,IAAhB,GAAwB,oDAAmDH,QAAS,kEAAiEC,UAAW,EAAhK;AACH;AACJ;;AAED,iBAAeG,cAAf,CAA8BC,CAA9B,EAAiC;AAC7B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACnB,YAAMX,YAAY,EAAlB;AACH;AACJ;;AAED,sBAAS;AACD,IAAA,SAAS,EAAG,WADX;AAAA,4BAEL;AACM,MAAA,QAAQ,EACTU,CAAD,IAAOZ,aAAa,CAACY,CAAC,CAACE,MAAF,CAASC,KAAV,CAFxB;AAIA,MAAA,UAAU,EAAKJ,cAJf;AAKA,MAAA,WAAW,EAAG,oBALd;AAMA,MAAA,KAAK,EAAKZ;AANV;AAAA;AAAA;AAAA;AAAA,YAFK,oBASF;AACD,MAAA,OAAO,EAAKG,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAaH;;GAvCQV,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\n\r\nfunction SearchBar(props) {\r\n    const initialSearchTerm = () =>\r\n        String(window.localStorage.getItem('searchTerm') || '');\r\n    const [searchTerm, setSearchTerm] = useState(initialSearchTerm);\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem('searchTerm', searchTerm);\r\n    }, [searchTerm]);\r\n\r\n    async function handleSearch() {\r\n        try {\r\n            await props.searchSpotify(searchTerm);\r\n        } catch (error) {\r\n            console.warn(error);\r\n            const clientId = '1dceb8831c90409b9872b61d0123e24aaf4094bc06e540edbc82403be27a055c';\r\n            const currentUrl = window.location.href;\r\n            window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${currentUrl}`;\r\n        }\r\n    }\r\n\r\n    async function handleKeyPress(e) {\r\n        if (e.key === 'Enter') {\r\n            await handleSearch();\r\n        }\r\n    }\r\n\r\n    return ( <\r\n        div className = 'SearchBar' >\r\n        <\r\n        input onChange = {\r\n            (e) => setSearchTerm(e.target.value)\r\n        }\r\n        onKeyPress = { handleKeyPress }\r\n        placeholder = 'Enter A Song Title'\r\n        value = { searchTerm }\r\n        /> <\r\n        a onClick = { handleSearch } > SEARCH < /a> < /\r\n        div >\r\n    );\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}