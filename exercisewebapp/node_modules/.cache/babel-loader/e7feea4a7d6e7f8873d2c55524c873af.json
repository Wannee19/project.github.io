{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\desktop\\\\wannee.github.io\\\\jsd-jamming-assessment\\\\src\\\\components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Spotify from \"../../utils/Spotify\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [searchedTracks, setSearchedTracks] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    const spotifyTokenFromUrlFragment = window.location.hash.split(\"&\")[0].substring(14);\n    setSpotifyToken(spotifyTokenFromUrlFragment);\n  }, []);\n\n  async function searchSpotify(searchTerms) {\n    const results = await Spotify.search(searchTerms, spotifyToken);\n    setSearchedTracks(results);\n  }\n\n  async function createSpotifyPlaylist(name, trackIds) {\n    await Spotify.createPlaylist(name, trackIds, spotifyToken);\n    setPlaylistTracks([]);\n  }\n\n  function addTrackToPlaylist(track) {\n    setPlaylistTracks(oldPlaylistTracks => {\n      if (oldPlaylistTracks.includes(track)) {\n        return oldPlaylistTracks;\n      } else {\n        return [...oldPlaylistTracks, track];\n      }\n    });\n  }\n\n  function removeTrackFromPlaylist(track) {\n    setPlaylistTracks(oldPlaylistTracks => oldPlaylistTracks.filter(t => track !== t));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \" mmm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }, this), \"ing\", \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchSpotify: searchSpotify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          tracks: searchedTracks,\n          addTrackToPlaylist: addTrackToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(Playlist, {\n          tracks: playlistTracks,\n          removeTrackFromPlaylist: removeTrackFromPlaylist,\n          createSpotifyPlaylist: createSpotifyPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), \" \", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 14\n  }, this);\n}\n\n_s(App, \"yT6WbXQ4o0xsRr7NoGsYV2zIo44=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/desktop/wannee.github.io/jsd-jamming-assessment/src/components/App/App.js"],"names":["React","useState","useEffect","Spotify","SearchBar","SearchResults","Playlist","App","searchedTracks","setSearchedTracks","playlistTracks","setPlaylistTracks","spotifyToken","setSpotifyToken","spotifyTokenFromUrlFragment","window","location","hash","split","substring","searchSpotify","searchTerms","results","search","createSpotifyPlaylist","name","trackIds","createPlaylist","addTrackToPlaylist","track","oldPlaylistTracks","includes","removeTrackFromPlaylist","filter","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../utils/Spotify\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\n\r\nfunction App() {\r\n    const [searchedTracks, setSearchedTracks] = useState([]);\r\n    const [playlistTracks, setPlaylistTracks] = useState([]);\r\n    const [spotifyToken, setSpotifyToken] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const spotifyTokenFromUrlFragment = window.location.hash\r\n            .split(\"&\")[0]\r\n            .substring(14);\r\n        setSpotifyToken(spotifyTokenFromUrlFragment);\r\n    }, []);\r\n\r\n    async function searchSpotify(searchTerms) {\r\n        const results = await Spotify.search(searchTerms, spotifyToken);\r\n        setSearchedTracks(results);\r\n    }\r\n\r\n    async function createSpotifyPlaylist(name, trackIds) {\r\n        await Spotify.createPlaylist(name, trackIds, spotifyToken);\r\n        setPlaylistTracks([]);\r\n    }\r\n\r\n    function addTrackToPlaylist(track) {\r\n        setPlaylistTracks((oldPlaylistTracks) => {\r\n            if (oldPlaylistTracks.includes(track)) {\r\n                return oldPlaylistTracks;\r\n            } else {\r\n                return [...oldPlaylistTracks, track];\r\n            }\r\n        });\r\n    }\r\n\r\n    function removeTrackFromPlaylist(track) {\r\n        setPlaylistTracks((oldPlaylistTracks) =>\r\n            oldPlaylistTracks.filter((t) => track !== t)\r\n        );\r\n    }\r\n\r\n    return ( <\r\n        div >\r\n        <\r\n        h1 >\r\n        Ja < span className = \"highlight\" > mmm < /span>ing{\" \"} <\r\n        /h1>{\" \"} <\r\n        div className = \"App\" >\r\n        <\r\n        SearchBar searchSpotify = { searchSpotify }\r\n        />{\" \"} <\r\n        div className = \"App-playlist\" >\r\n        <\r\n        SearchResults tracks = { searchedTracks }\r\n        addTrackToPlaylist = { addTrackToPlaylist }\r\n        />{\" \"} <\r\n        Playlist tracks = { playlistTracks }\r\n        removeTrackFromPlaylist = { removeTrackFromPlaylist }\r\n        createSpotifyPlaylist = { createSpotifyPlaylist }\r\n        />{\" \"} <\r\n        /div>{\" \"} <\r\n        /div>{\" \"} <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}